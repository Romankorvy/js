//task1
//Какое последнее значение выведет этот код? Почему?

var i = 3;

while (i) {
  alert( i-- ); // Каждая итерация цикла уменьшает i на 1.
}
// Первая итерация цикла выведет сообщение с числом 3
// Вторая итерация цикла выведет сообщение с числом 2
// Третья итерация цикла выведет сообщение с числом 1
// Цикл прекритит выполнятся когда i=0 (false),
// поскольку условие в скобках while (i) проверяется на логическое значение.

//task2
//Какие значения i выведет цикл while?

//Префиксный вариант

var i = 0;
while (++i < 5) alert( i );
// Сначала i=1, т.к ++i, выполнится сравнение и alert выведет 1.
// Далее i=2, т.к ++i, выполнится сравнение и alert выведет 2.
// Далее i=3, т.к ++i, выполнится сравнение и alert выведет 3.
// Далее i=4, т.к ++i, выполнится сравнение и alert выведет 4.
// Далее i=5, т.к ++i, выполнится сравнение (5>5)(false) и alert  ничего невыведет.

//Постфиксный вариант

var i = 0;
while (i++ < 5) alert( i );
// Сначала i=0, т.к i++ увеличивает на 1, но возвращает старое значение. Поэтому будет сравниваться (0>5)
// Вызов оператора alert - это новая операция и поэтому i=1, принивает новое значение.
// Далее i=2, т.к i++, выполнится сравнение и alert выведет 2.
// Далее i=3, т.к i++, выполнится сравнение и alert выведет 3.
// Далее i=4, т.к i++, выполнится сравнение и alert выведет 4.
// Потом i увеличится до 5 и alert выведет последнее значение 5.

//task3
//Какие значения i выведет цикл for?

//Постфиксная форма:

for (var i = 0; i < 5; i++) alert( i );
// Цикл for сначала производит var i = 0
// Потом 0 < 5
// Вызрв alert. Вывод значения 0.
// Далее i++, уже i=1, 1<5, alert .....цикл завершится при i=5, (5>5)(false).
// alert выведет сообщения с числами от 0-4.

for (var i = 0; i < 5; ++i) alert( i );

//Алгоритм решения такой же как и с for (var i = 0; i < 5; i++) alert( i );

//task4
//Выведите чётные числа
//При помощи цикла for выведите чётные числа от 2 до 10.

for (var i = 2; i <= 10; i++) { //Начало цикла старутует i=2 до i=10 с шагом 1.
  if (i % 2 === 0) { // Если остаток от деления равен 0, точнее его нету.
 alert( i ); // то происходит вызов alert со значением удовлетворяющим условия оператора if.
  }
}

//task5
//Перепишите код, заменив цикл for на while, без изменения поведения цикла.

// for (var i = 0; i < 3; i++) {
//   alert( "номер " + i + "!" );
// }

var i = 0;
while (i < 3) {  //Проверка условия
  alert("номер " + i + "!"); //Вывод сообщения
  i++; //Увеличиваем i на 1
}  

//task6
//Напишите цикл, который предлагает prompt ввести число, большее 100.
//Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.
//Цикл должен спрашивать число пока либо посетитель не введёт число,
//большее 100, либо не нажмёт кнопку Cancel (ESC).

var num;

do {
  num = prompt("Введите число больше 100?", 0);//Вывод сообщения "Введите число больше 100?"
} while (num <= 100 && num != null);// Если число меньше 100 и наравно 0, выводится сново сообщение "Введите число больше 100?"

//task7
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
// Другими словами, n>1 – простое, если при делении на любое число от 2 до n-1 есть остаток.
// Создайте код, который выводит все простые числа из интервала от 2 до 10. Результат должен быть: 2,3,5,7.

next: for (var i = 2; i <= 10; i++) {

  for (var j = 2; j < i; j++) {
    if (i % j === 0) continue next;
  }
  alert( i ); 
}

//task7
// Напишите "if", аналогичный "switch"
// Напишите if..else, соответствующий следующему switch:

// switch (browser) {
//   case 'IE':
//     alert( 'О, да у вас IE!' );
//     break;

//   case 'Chrome':
//   case 'Firefox':
//   case 'Safari':
//   case 'Opera':
//     alert( 'Да, и эти браузеры мы поддерживаем' );
//     break;

//   default:
//     alert( 'Мы надеемся, что и в вашем браузере все ок!' );
// }

if(browser == 'IE') { // Сравниваем с 'IE', если совпадает, то
  alert('О, да у вас IE!'); //Выводим сообщение: 'О, да у вас IE!'.Конец операции.
} else if (browser == 'Chrome' || browser == 'Firefox' || browser == 'Safari' || browser == 'Opera') { // Иначе если browser совпадает с 'Chrome', с 'Firefox', с 'Safari', с 'Opera' 
  alert('Да, и эти браузеры мы поддерживаем'); //Выводим сообщение: 'Да, и эти браузеры мы поддерживаем'.Конец операции.
} else { // В других случаях, выводим сообщение: 'Мы надеемся, что и в вашем браузере все ок!'
  alert('Мы надеемся, что и в вашем браузере все ок!');
}

//task8
//Переписать if'ы в switch

// var a = +prompt('a?', '');

// if (a == 0) {
//   alert( 0 );
// }
// if (a == 1) {
//   alert( 1 );
// }

// if (a == 2 || a == 3) {
//   alert( '2,3' );
// }

var a = +prompt('a?', ''); // Вводим число

switch (a) { 
  case 0:  //Если число равно 0
    alert( 0 ); // Выводим сообщение
    break; //Конец операции.
  case 1: //Если число равно 1
    alert( 1 );// Выводим сообщение
    break;//Конец операции.
  case 2://Если число равно 2 или 3
  case 3://Если число равно 2 или 3
    alert('2,3'); // Выводим сообщение
    break;//Конец операции.
}

//task9 function

//Обязателен ли "else"?


//Следующая функция возвращает true, если параметр age больше 18.
//В ином случае она задаёт вопрос посредством вызова confirm и возвращает его результат.

function checkAge(age) {
  if (age > 18) { //Условие
    return true; //Возврат значения в переменную
  } else {
    // ...
    return confirm('Родители разрешили?');
  }
}
//Будет ли эта функция работать как-то иначе, если убрать else?

function checkAge(age) {
  if (age > 18) {
    return true;
  }
  // ...
  return confirm('Родители разрешили?');
}
//Есть ли хоть одно отличие в поведении этого варианта?

//Все операции происходят внутри тела фунции, послдедовательно.
//После завершения выполнения оператора if, выполнится return confirm('Родители разрешили?').

//task10
//Перепишите функцию, используя оператор '?' или '||'

// function checkAge(age) {
//   if (age > 18) {
//     return true;
//   } else {
//     return confirm('Родители разрешили?');
//   }
// }

function checkAge(age) {
  return (age > 18) ? true : confirm('Родители разрешили?');
}

function checkAge(age) {
  return (age > 18 || confirm('Родители разрешили?');
}

//task11
//Напишите функцию min(a,b), которая возвращает меньшее из чисел a,b.

function min (a,b) {
  if (a > b) { //Условие (a > b)
    return b; //Возвращаем b
  }  else { //Иначе
     return a //Возвращаем а
    }
  }

  function min (a,b) {
    return (a > b) ? a : b;
  }

//task11
// Функция pow(x,n)

function pow(x, n) {
  var result = x; //присваиваем значение х переменной result

  for (var i = 1; i < n; i++) { //Условие
    result *= x;  //
  }
  return result; //Возвращаем результат
}

var x = prompt("Введите x", ''); // Вводим x
var n = prompt("Введите n", '');// Вводим n

if (n <= 1) { //Условие степени
  alert('Введите целую степень, больше 1');// Вывод сообщения при значении степени меньше или равной 1
} else {
  alert( pow(x, n) ); //Если степень больше 1, выполняется функция pow.
}

//function pow(2, 3) {
//   var result = 2;
//   for (var i = 1; 1 < 3; 2) { //Условие цикла
//     result = 2 * 2 = 4;  //Вычисляем
//   }
//   return result; //Возвращаем результат вычисления result = 4.
// }

// for (var i = 2; 2 < 3; 3) { //Условие цикла
//   result = 4 * 2 = 4;  //Вычисляем
// }
// return result (8); //Возвращаем результат вычисления result = 8.
// }

// for (var i = 3; 3 < 3; 3) { //Условие false. Вычисления завершены.


